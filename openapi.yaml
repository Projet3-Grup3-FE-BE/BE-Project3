openapi: 3.0.0
info:
  description: |
    This is a sample Petstore server.  You can find
    out more about Swagger at
    [http://swagger.io](http://swagger.io) or on
    [irc.freenode.net, #swagger](http://swagger.io/irc/).
  version: "1.0.0"
  title: E-commerce Project 3
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license: 
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/LukmanNgoding/ecommerce_project3/1.0.0
  - url: 'https://petstore.swagger.io/v2'
tags:
  - name: User #login, register, lihat profile user, update profile user, delelte profile (non aktif dgn delete gorm)
    description: API mengelola fitur User  
  - name: Product
    description:  API mengelola fitur Product  
  - name: Cart
    description:  API mengelola fitur Cart
  - name: Checkout
    description:  API mengelola fitur Checkout
  - name: Order
    description:  API mengelola fitur Order
  
paths:
  /login:
    post:
      security:
        - bearerAuth: []
      summary: "Login User"
      tags:
      - "User"
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              type: object
              properties:
                "email":
                  type: string
                "password":
                  type: string
            example:
              email: "adidas@gmail.com"
              password: "123"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccesLoginResult"
              example:
                message: "Login Success"
                data:
                  id: 1
                  email: "adidas@gmail.com"
                  name: "adidas"
                  phone: "08771079"
                  bio: "Adidas"
                  token: "bC5jb20ifQ.TKw15NmLbSdIRwXWiu6UiMIudaCe5ecqyANNvA7YL"
        "400" :
          $ref : "#/components/responses/400"  
        '500':
          $ref: "#/components/responses/500"

  /register :
    post:
      summary: "Insert Data User"
      tags:
      - "User"
      requestBody:
        required: true
        content:
          "application/json":
            schema:
                $ref: "#/components/schemas/InsertUserObject"
            example:
              username: "gibran"
              email: "adidas@gmail.com"
              password: "123"
              name: "adidas"
              alamat_pengiriman: "jl.gunung anthena 1 no 11a, denpasar barat, Bali"
      responses:
        "201":
          description: "Success create data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResult"
              example:
                message: "User successfully created"
                data:
                  id: 1
                  username: "gibran"
                  email: "adidas@gmail.com"
                  name: "adidas"
                  alamat_pengiriman: "jl.gunung anthena 1 no 11a, denpasar barat, Bali"

        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"
        '500':
          $ref: "#/components/responses/500"
  /users :
    put: 
      security:
        - bearerAuth: []
      summary: "Update Data user"
      tags:
        - "User"
      requestBody:
        description: "Update user data"
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/EditUserObject"
            example:
              data:
                email: "adidas@gmail.com"
                password: "123"
                name: "gibran"
                phone: "089234324"
                bio: "Nike"
                gender : "male"
                location : "Denpasar"
      responses:
        '200':
          description: "Success update data"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/SuccessResult"
              example:
                message: "Success update data"
                data:
                  id: 1
                  email: "adidas@gmail.com"
                  name: "gibran"
                  phone: "089234324"
                  bio: "nike"
                  gender : "male"
                  location : "Denpasar"
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"           
        '500':
          $ref: "#/components/responses/500"
    delete:
      security:
        - bearerAuth: []
      summary: "Delete User Data"
      tags:
        - "User"
      responses:
        "200":
          description: "Success Delete Data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResult"
              example:
                message: "Success Delete Data"
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"   
        '500':
          $ref: "#/components/responses/500"

  /users/{email}:
    get:
      security:
        - bearerAuth: []    
      summary: "User Data"
      tags:
      - "User"
      parameters:
        - name: email
          in: path
          description: "Email parameter"
          required: true
          schema:
            type: string
          examples:
            email: 
              value: "cecep@gmail.com"
      responses:
        "200":
          description: "Success Get Data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResult"
              example:
                message: "Success Get Data"
                data:
                  id: 1
                  email: "boby@gmail.com"
                  name: "boby"
                  phone: "089234324"
                  bio: "nike and adidas"
                  is_active: true            
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"
        "500" :
          $ref : "#/components/responses/500"
  /users/username:
    get: 
      security:
        - bearerAuth: []
      summary: "Profil User"
      tags:
        - "User"
      requestBody:
        description: "Profile User"
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/EditUserObject"
            example:
              data:
                id: 1
                name: "gibran"
                phone: "089234324"
                recipient_address: "jalan buka hati"
                shop_name: "kuda kencana"
      responses:
        "201":
          description: "Success Profile"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResult"
              example:
                message: "User successfully Profile"
                data:
                  id: 1
                  name: "gibran"
                  phone: "089234324"
                  recipient_address: "jalan buka hati"
                  shop_name: "kuda kencana"
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"   
        '500':
          $ref: "#/components/responses/500"
  /me:
    get:
      security:
        - bearerAuth: []
      summary: "Get me date User (token)"
      tags:
        - "User"
      responses:
        "201":
          description: "Success User Me"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResult"
              example:
                message: "User successfully Me"
                data:
                  id: 1
                  name: "gibran"
                  phone: "089234324"
                  recipient_address: "jalan buka hati"
                  shop_name: "kuda kencana"
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"   
        '500':
          $ref: "#/components/responses/500"

########## PRODUCT ##########

  /products:
    post:
      security:
        - bearerAuth: []
      summary: "Post date Product"
      tags:
        - "Product"
      requestBody:
        description: "Post date Product"
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/PostProductObject"
            example:
              data:
                product_name: "adidas"
                price: 2.000.000
                image_url: "link.ljasjlasjlalsja"
                description: "good"
      responses:
        "201":
          description: "Success Post Product"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResult"
              example:
                message: "Product successfully Post"
                data:
                  id_product: 1
                  product_name: "adidas"
                  price: 2.000.000
                  image_url: "link.ljasjlasjlalsja"
                  description: "good"
                  shop_name: "adidas shop"
                  is_sold: "true"
                  id_user_seller: 1
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"   
        '500':
          $ref: "#/components/responses/500"
    get:
      summary: "Get All date Product"
      tags:
        - "Product"
      responses:
        "201":
          description: "Success Get All date Product"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccesArrayResult"
              example:
                message: "Get All Product successfully"
                data:
                  - id_product: 1
                    product_name: "adidas"
                    price: 2.000.000
                    image_url: "link.ljasjlasjlalsja"
                  - id_product: 2
                    product_name: "diodora"
                    price: 1.000.000
                    image_url: "link.wkwkwkuakak"
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"   
        '500':
          $ref: "#/components/responses/500"
  /products/:id:
    put:
      security:
        - bearerAuth: []
      summary: "Update date Product"
      tags:
        - "Product"
      requestBody:
        description: "Update date Product"
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/PostProductObject"
            example:
              data:
                product_name: "adidas"
                price: 2.000.000
                image_url: "link.ljasjlasjlalsja"
                description: "good"
      responses:
        "201":
          description: "Success Update Product"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResult"
              example:
                message: "Product successfully Post"
                data:
                  id_product: 1
                  product_name: "adidas"
                  price: 2.000.000
                  image_url: "link.ljasjlasjlalsja"
                  description: "good"
                  shop_name: "adidas shop"
                  is_sold: "true"
                  id_user_seller: 1
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"   
        '500':
          $ref: "#/components/responses/500"
    delete:
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: "ID Product parameter"
          required: true
          schema:
            type: integer
      summary: "Delete Product data"
      tags:
        - "Product"
      responses:
        "200":
          description: "Success Delete Product Data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResult"
              example:
                message: "Success Delete cart Data"
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"   
        '500':
          $ref: "#/components/responses/500"

########## CART ########
  /carts:
    post:
      security:
        - bearerAuth: []
      summary: "Post date Cart"
      tags:
        - "Cart"
      requestBody:
        description: "Post date Cart"
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/PostCartObject"
            example:
              data:
                id_product: 1
                product_name: "adidas"
                price: 2.000.000
                qty: 3
                sub_total: 30.000.000
                image_url: "link.ljasjlasjlalsja"
                notes: "good point"
                shop_name: "adidas shop"
                id_user_seller: 1
      responses:
        "201":
          description: "Success Post date Cart"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccesArrayResult"
              example:
                message: "Post Cart successfully"
                data:
                  id_cart: 1
                  shop_name: "adidas shop"
                  is_checkout: 1
                  id_user_seller: 2
                  id_user_buyer: 2
                  cart_detail:
                    - id_cart_detail: 22
                      id_cart: 1
                      id_product: 2
                      product_name: "adidas"
                      price: 2.000.000
                      qty: 3
                      sub_total: 30.000.000
                      image_url: "link.ljasjlasjlalsja"
                      notes: "good point"
                      shop_name: "adidas shop"
                      id_user_buyer: 2
                      id_user_seller: 2

                    - id_cart_detail: 23
                      id_cart: 2
                      id_product: 3
                      product_name: "nike"
                      price: 3.000.000
                      qty: 3
                      sub_total: 30.000.000
                      image_url: "link.kmakauaahaiol"
                      notes: "good"
                      shop_name: "nike shop"
                      id_user_buyer: 3
                      id_user_seller: 3
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"   
        '500':
          $ref: "#/components/responses/500"

  /carts/:id:
    get:
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: "ID_cart parameter"
          required: true
          schema:
            type: integer
      summary: "Get date Cart"
      tags:
        - "Cart"
      responses:
        "201":
          description: "Success Get date Cart"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccesArrayResult"
              example:
                message: "Get Cart successfully"
                data:
                  id_cart: 1
                  shop_name: "adidas shop"
                  is_checkout: 1
                  id_user_seller: 2
                  id_user_buyer: 2
                  cart_detail:
                    - id_cart_detail: 22
                      id_cart: 1
                      id_product: 2
                      product_name: "adidas"
                      price: 2.000.000
                      qty: 3
                      sub_total: 30.000.000
                      image_url: "link.ljasjlasjlalsja"
                      notes: "good point"
                      shop_name: "adidas shop"
                      id_user_buyer: 2
                      id_user_seller: 2

                    - id_cart_detail: 23
                      id_cart: 2
                      id_product: 3
                      product_name: "nike"
                      price: 3.000.000
                      qty: 3
                      sub_total: 30.000.000
                      image_url: "link.kmakauaahaiol"
                      notes: "good"
                      shop_name: "nike shop"
                      id_user_buyer: 3
                      id_user_seller: 3
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"   
        '500':
          $ref: "#/components/responses/500"

    delete:
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: "ID cart parameter"
          required: true
          schema:
            type: integer
      summary: "Delete cart data"
      tags:
        - "Cart"
      responses:
        "200":
          description: "Success Delete cart Data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResult"
              example:
                message: "Success Delete cart Data"
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"   
        '500':
          $ref: "#/components/responses/500"

  /carts_detail/:id:
    put:
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: "ID cart detail parameter"
          required: true
          schema:
            type: integer
      summary: "Update data Cart detail"
      tags:
        - "Cart"
      requestBody:
          description: "Update data cart detail"
          required: true
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PostCartObject"
              example:
                data:
                  id_cart_detail: 22
                  notes: "good point"
      responses:
        "201":
          description: "Success update Cart detail"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccesArrayResult"
              example:
                message: "Update Cart detail successfully"
                data:
                    id_cart_detail: 22
                    id_cart: 1
                    id_product: 2
                    product_name: "adidas"
                    price: 2.000.000
                    qty: 3
                    sub_total: 30.000.000
                    image_url: "link.ljasjlasjlalsja"
                    notes: "good point"
                    shop_name: "adidas shop"
                    id_user_buyer: 2
                    id_user_seller: 2
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"   
        '500':
          $ref: "#/components/responses/500"

    delete:
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: "ID cart detail parameter"
          required: true
          schema:
            type: integer
      summary: "Delete cart detail data"
      tags:
        - "Cart"
      responses:
        "200":
          description: "Success Delete cart detail Data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResult"
              example:
                message: "Success Delete cart detail Data"
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"   
        '500':
          $ref: "#/components/responses/500"

######## CHECKOUT #########

  /checkouts/:id:
    post:
      security:
        - bearerAuth: []
      parameters:
        - name: id_carts
          in: path
          description: "ID cart parameter"
          required: true
          schema:
            type: integer
      summary: "Post data checkout"
      tags:
        - "Checkout"
      requestBody:
          description: "Post data checkout"
          required: true
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PostCheckoutObject"
              example:
                data:
                  id_carts: 22
      responses:
        "201":
          description: "Success Post date checkout"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccesArrayResult"
              example:
                message: "Post checkout successfully"
                data:
                  id_checkout: 1
                  recipient_name: "iqbal"
                  recipient_phone: 08990870
                  recipient_address: "jl.pegangsaan timur, jakarta"
                  sub_total: 3.000.000
                  shop_name: "adidas shop"
                  id_cart: 1
                  id_user_buyer: 2
                  id_user_seller: 2
                  cart_detail:
                    - id_cart_detail: 22
                      product_name: "adidas"
                      price: 2.000.000
                      notes: "good point"
                      image_url: "link.ljasjlasjlalsja"
                      qty: 3
                      sub_total: 30.000.000
                    - id_cart_detail: 23
                      product_name: "nike"
                      price: 3.000.000
                      notes: "good"
                      image_url: "link.kmakauaahaiol"
                      qty: 3
                      sub_total: 30.000.000
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"   
        '500':
          $ref: "#/components/responses/500"

    get:
      security:
        - bearerAuth: []
      parameters:
        - name: id_checkout
          in: path
          description: "ID cart checkout parameter"
          required: true
          schema:
            type: integer
      summary: "Get data checkout"
      tags:
        - "Checkout"
      responses:
        "201":
          description: "Success Post date checkout"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccesArrayResult"
              example:
                message: "Post checkout successfully"
                data:
                  id_checkout: 1
                  recipient_name: "iqbal"
                  recipient_phone: 08990870
                  recipient_address: "jl.pegangsaan timur, jakarta"
                  sub_total: 3.000.000
                  shop_name: "adidas shop"
                  is_paid: "(true,false)"
                  id_cart: 1
                  id_user_buyer: 2
                  id_user_seller: 2
                  cart_detail:
                    - id_cart_detail: 22
                      product_name: "adidas"
                      price: 2.000.000
                      notes: "good point"
                      image_url: "link.ljasjlasjlalsja"
                      qty: 3
                      sub_total: 30.000.000
                    - id_cart_detail: 23
                      product_name: "nike"
                      price: 3.000.000
                      notes: "good"
                      image_url: "link.kmakauaahaiol"
                      qty: 3
                      sub_total: 30.000.000
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"   
        '500':
          $ref: "#/components/responses/500"
    put:
      security:
        - bearerAuth: []
      parameters:
        - name: id_checkout
          in: path
          required: true
          schema:
            type: integer
      summary: "Update data checkout"
      tags:
        - "Checkout"
      requestBody:
          description: "Update data checkout"
          required: true
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PostCheckoutObject"
              example:
                data:
                  id_checkout: 1
                  recipient_name: "iqbal"
                  recipient_phone: 08990870
                  recipient_address: "jl.pegangsaan timur, jakarta"
      responses:
        "201":
          description: "Success Update date checkout"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccesArrayResult"
              example:
                message: "Update checkout successfully"
                data:
                  id_checkout: 1
                  recipient_name: "iqbal"
                  recipient_phone: 08990870
                  recipient_address: "jl.pegangsaan timur, jakarta"
                  sub_total: 3.000.000
                  shop_name: "adidas shop"
                  id_cart: 1
                  id_user_buyer: 2
                  id_user_seller: 2
                  cart_detail:
                    - id_cart_detail: 22
                      product_name: "adidas"
                      price: 2.000.000
                      notes: "good point"
                      image_url: "link.ljasjlasjlalsja"
                      qty: 3
                      sub_total: 30.000.000
                    - id_cart_detail: 23
                      product_name: "nike"
                      price: 3.000.000
                      notes: "good"
                      image_url: "link.kmakauaahaiol"
                      qty: 3
                      sub_total: 30.000.000
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"   
        '500':
          $ref: "#/components/responses/500"
    delete:
      security:
        - bearerAuth: []
      parameters:
        - name: id_checkout
          in: path
          description: "ID checkout parameter"
          required: true
          schema:
            type: integer
      summary: "Delete checkout detail data"
      tags:
        - "Checkout"
      responses:
        "200":
          description: "Success Delete checkout Data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResult"
              example:
                message: "Success Delete checkout Data"
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"   
        '500':
          $ref: "#/components/responses/500"
  
  ######### ORDER #########

  /order/:id_checkout:
    post:
      security:
        - bearerAuth: []
      parameters:
        - name: id_checkout
                id_user_buyer
                id_user_seller
          in: path
          required: true
          schema:
            type: integer
      summary: "Post data Order"
      tags:
        - "Order"
      requestBody:
          description: "Post data Order"
          required: true
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PostOrdertObject"
              example:
                data:
                  id_checkout: 1
                  sub_total: 3
                  shipping_name: "luky"
                  shipping_cost: 18.000
                  gross_ammount: 3
      responses:
        "201":
          description: "Success Post date Order"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccesArrayResult"
              example:
                message: "Post date Order successfully"
                data:
                  id_order: 1
                  sub_total: 3
                  shipping_name: "luky"
                  shipping_cost: 18.000
                  gross_ammount: 3
                  id_checkout: 1
                  snap_token: "jsjallslasjlasyisbdmdamdh"
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"   
        '500':
          $ref: "#/components/responses/500"

  /orders/:id:
    get:
      security:
        - bearerAuth: []
      parameters:
        - name: id_checkout
          in: path
          required: true
          schema:
            type: integer
      summary: "Get data Order"
      tags:
        - "Order"
      responses:
        "201":
          description: "Success Get date Order"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccesArrayResult"
              example:
                message: "Get date Order successfully"
                data:
                  id_order: 1
                  sub_total: 3
                  shipping_name: "luky"
                  shipping_cost: 18.000
                  gross_ammount: 3
                  id_checkout: 1
        "400" :
          $ref : "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"   
        '500':
          $ref: "#/components/responses/500"
components:
  securitySchemes:
    "bearerAuth" :
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  schemas:
    "GetUserObject":
      type: object
      properties:
        "id":
          type: integer
        "email":
          type: string
        "name":
          type: string
        "phone":
          type: string
        "bio":
          type: string  
        "gender":
          type: string  
        "location":
          type: string  
    "ArrayUserObj":
      type: array
      items :
        $ref: "#/components/schemas/GetUserObject"
    "InsertUserObject":
      type: object
      properties:
        "id":
          type: integer
        "email":
          type: string
        "password":
          type: string
        "name":
          type: string
        "phone":
          type: string
        "bio":
          type: string    
    "EditUserObject":
      type: object
      properties:
        "email":
          type: string
        "password":
          type: string
        "name":
          type: string
        "phone":
          type: string
        "gender":
          type: string
        "location":
          type: string
        "bio":
          type: string 
    "PostProductObject":
      type: object
      properties:
        "id_product":
          type: integer
        "product_name":
          type: string
        "price":
          type: integer
        "image_url":
          type: string
        "description":
          type: string
        "shop_name":
          type: string
        "is_sold":
          type: string
        "id_user_seller":
          type: string
    "PostCartObject":
      type: object
      properties:
        "id_product":
          type: integer
        "product_name":
          type: string
        "price":
          type: integer
        "qty":
          type: integer
        "sub_total":
          type: integer
        "image_url":
          type: string
        "notes":
          type: string
        "shop_name":
          type: string
        "id_user_seller":
          type: string
    "PostCheckoutObject":
      type: object
      properties:
        "id_product":
          type: integer
        "product_name":
          type: string
        "price":
          type: integer
        "qty":
          type: integer
        "sub_total":
          type: string
        "image_url":
          type: string
        "notes":
          type: string
        "shop_name":
          type: string
        "id_user_seller":
          type: string
    "PostOrdertObject":
      type: object
      properties:
        "id_checkout ":
          type: integer
        "sub_total":
          type: string
        "shipping_name":
          type: string
        "shipping_cost":
          type: integer
        "gross_ammount":
          type: integer
    "CommentObject":
      type: object
      properties:
        "id":
          type: integer
        "name":
          type: integer
        "comment_value":
          type: string
        "id_user":
          type: integer
        "id_posting":
          type: string
    "InsertCommentObject":
      type: object
      properties:
        "name":
          type: string
        "comment_value":
          type: string
        "id_user":
          type: integer
        "id_posting":
          type: string  
    "EditCommentObject":
      type: object
      properties:
        "comment_value":
          type: string    
    "ArrCommentObject":
      type: array
      items:
        $ref: "#/components/schemas/CommentObject"    
    "SuccessResult":
      type: object
      properties:
        message: 
          type: string
        data:
          type: object
    "SuccesLoginResult":
      type: object
      properties:
        message: 
          type: string
        data:
          type: object
        token: 
          type: string
    "SuccesArrayResult":
      type: object
      properties:
        message: 
          type: string
        data:
          type: array
          items : 
            $ref: "#/components/schemas/ArrCommentObject"
          
  responses:
    '200':
      description: "Success Process Data"
      content:
        application/json:
          schema:
            type: object
            properties:
              message: 
                type: string
              data:
                type: object
    '201':
      description: "Success Create Data"
      content:
        application/json:
          schema:
            type: object
            properties:
              message: 
                type: string
              data:
                type: object
    '400':
      description: "Wrong Request From User"
      content:
        "application/json":
          schema:
            type: object
            properties:
              message:
                type: string
          example:
            message: "Process Failed. Please check your input."
    '401':
      description: "Authorization information is missing or invalid."
      content:
        "application/json":
          schema:
            type: object
            properties:
              message:
                type: string
          example:
            message: "Process Failed. User not authorized for this request."
    '500':
      description: "Error from server"
      content:
        "application/json":
          schema:
            type: object
            properties:
              message:
                type: string
          example:
            message: "Process Failed. Please check server."